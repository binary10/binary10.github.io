#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


# Compile rules for Home page
compile '/' do
    filter :kramdown, :input => "GFM"
#    filter :colorize_syntax, :default_colorizer => :pygmentsrb
    layout 'home'
    layout 'default'
end


# Compile rules for Blog entries
compile '/posts/*' do
    filter :kramdown, :input => "GFM"
#    filter :colorize_syntax, :default_colorizer => :pygmentsrb
    layout 'post'
    layout 'default'
end


# Compile rules for pages branching directly from Home
compile '*' do 
  if item[:extension] == 'md'
    filter :kramdown, :input => "GFM"
#    filter :colorize_syntax, :default_colorizer => :pygmentsrb
    layout 'default'
  elsif item[:extension] == 'css'
    # don’t filter stylesheets
  elsif item.binary?
    # don’t filter binary items
  else
    filter :slim
    layout 'default'
  end
end


# Define URL routes to pages
route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop + '.css'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end


# Process all layouts using Slim
layout '*', :slim
